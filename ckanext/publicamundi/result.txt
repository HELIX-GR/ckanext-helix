./reference_data/xsl/iso-19139-to-dcat-ap.xsl:755:<!-- Identifier, 0..1 -->
./reference_data/xsl/iso-19139-to-dcat-ap.xsl:768:<!-- Unique Resource Identifier -->
./reference_data/xsl/iso-19139-to-dcat-ap.xsl:976:<!-- Unique Resource Identifier -->  
./themes/geodata/messages.po:63:msgid "Identifier"
./lib/metadata/schemata/__init__.py:67:    #    title=u'Identifier', required=True, min_length=3)
./lib/metadata/schemata/inspire_metadata.py:61:        title = _(u'Identifier'),
./analytics/public/vendor/flanchejs.js:53:  //Identifier to be placed at the beginning of a property
./analytics/public/vendor/flanchejs.js:55:  //Identifier to be placed at the beginning of a private field
./analytics/public/vendor/flanchejs.js:57:  //Identifier to be placed at the beginning of a getter function
./analytics/public/vendor/flanchejs.js:59:  //Identifier to be placed at the beginning of a setter function
./analytics/public/vendor/openlayers3/ol.js:334:units:a.getAttribute("units"),unitSymbol:a.getAttribute("unitSymbol"),"default":a.getAttribute("default"),multipleValues:ll(a.getAttribute("multipleValues")),nearestValue:ll(a.getAttribute("nearestValue")),current:ll(a.getAttribute("current")),values:M(a)}}),Attribution:J(function(a,b){return L({},Pq,a,b)}),AuthorityURL:Wk(function(a,b){var c=yq(a,b);if(l(c)){var d=a.getAttribute("name");c.name=d;return c}}),Identifier:Wk(M),MetadataURL:Wk(function(a,b){var c=yq(a,b);if(l(c)){var d=a.getAttribute("type");
./templates/package/snippets/objects/glue-edit-inspire-datasetform.html:49:                    'title': _('Identifier'),
./pycsw/etc/mappings.py:43:        'pycsw:Identifier': 'identifier',
./pycsw/docs/administration.rst:154:- ``pycsw:Identifier``: unique identifier
./pycsw/tests/suites/manager/post/Transaction-iso-00-delete-all.xml:7:          <ogc:PropertyName>apiso:Identifier</ogc:PropertyName>
./pycsw/tests/suites/manager/post/Transaction-iso-03-update-recprop.xml:11:          <ogc:PropertyName>apiso:Identifier</ogc:PropertyName>
./pycsw/tests/suites/manager/post/Transaction-iso-05-delete.xml:7:          <ogc:PropertyName>apiso:Identifier</ogc:PropertyName>
./pycsw/tests/suites/manager/post/Transaction-iso-04-update-recprop-no-matches.xml:11:          <ogc:PropertyName>apiso:Identifier</ogc:PropertyName>
./pycsw/tests/suites/default/post/Transaction-delete.xml:7:          <ogc:PropertyName>apiso:Identifier</ogc:PropertyName>
./pycsw/tests/suites/default/post/Transaction-update-recordproperty.xml:11:          <ogc:PropertyName>apiso:Identifier</ogc:PropertyName>
./pycsw/tests/expected/suites_apiso-inspire_get_GetCapabilities.xml:199:        <ows:Value>apiso:Identifier</ows:Value>
./pycsw/tests/expected/suites_manager_post_GetCapabilities.xml:207:        <ows:Value>apiso:Identifier</ows:Value>
./pycsw/tests/expected/suites_default_post_Transaction-delete.xml:5:    <ows:ExceptionText>Invalid Constraint: Invalid Filter request: Invalid PropertyName: apiso:Identifier.  'apiso:Identifier'</ows:ExceptionText>
./pycsw/tests/expected/suites_harvesting_post_GetCapabilities.xml:207:        <ows:Value>apiso:Identifier</ows:Value>
./pycsw/tests/expected/suites_apiso-inspire_get_GetCapabilities-lang.xml:199:        <ows:Value>apiso:Identifier</ows:Value>
./pycsw/tests/expected/suites_apiso_post_GetCapabilities.xml:199:        <ows:Value>apiso:Identifier</ows:Value>
./pycsw/pycsw/metadata.py:152:    _set(context, serviceobj, 'pycsw:Identifier', identifier)
./pycsw/pycsw/metadata.py:290:    _set(context, serviceobj, 'pycsw:Identifier', identifier)
./pycsw/pycsw/metadata.py:338:        _set(context, recobj, 'pycsw:Identifier', identifier2)
./pycsw/pycsw/metadata.py:418:    _set(context, serviceobj, 'pycsw:Identifier', identifier)
./pycsw/pycsw/metadata.py:457:        _set(context, recobj, 'pycsw:Identifier', identifier2)
./pycsw/pycsw/metadata.py:523:    _set(context, serviceobj, 'pycsw:Identifier', identifier)
./pycsw/pycsw/metadata.py:562:        _set(context, recobj, 'pycsw:Identifier', identifier2)
./pycsw/pycsw/metadata.py:617:    _set(context, serviceobj, 'pycsw:Identifier', identifier)
./pycsw/pycsw/metadata.py:669:    _set(context, serviceobj, 'pycsw:Identifier', identifier)
./pycsw/pycsw/metadata.py:708:        _set(context, recobj, 'pycsw:Identifier', identifier2)
./pycsw/pycsw/metadata.py:773:        _set(context, recobj, 'pycsw:Identifier', md.idinfo.datasetid)
./pycsw/pycsw/metadata.py:775:        _set(context, recobj, 'pycsw:Identifier', uuid.uuid1().get_urn())
./pycsw/pycsw/metadata.py:856:    _set(context, recobj, 'pycsw:Identifier', md.identifier)
./pycsw/pycsw/metadata.py:1047:    _set(context, recobj, 'pycsw:Identifier', md.identifier)
./pycsw/pycsw/config.py:80:                'pycsw:Identifier': 'identifier',
./pycsw/pycsw/config.py:280:                            {'dbcol': self.md_core_model['mappings']['pycsw:Identifier']},
./pycsw/pycsw/config.py:328:            'dc:identifier': 'pycsw:Identifier',
./pycsw/pycsw/schemas/ogc/gml/3.1.1/base/coordinateSystems.xsd:87:			<documentation>Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.</documentation>
./pycsw/pycsw/schemas/ogc/gml/3.1.1/base/referenceSystems.xsd:113:					<documentation>The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects.</documentation>
./pycsw/pycsw/schemas/ogc/gml/3.1.1/base/referenceSystems.xsd:127:			<documentation>Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format.</documentation>
./pycsw/pycsw/schemas/ogc/csw/2.0.2/rec-dcmes.xsd:121:      Resource Identifier (URI) (including the Uniform Resource Locator 
./pycsw/pycsw/schemas/ogc/csw/2.0.2/rec-dcmes.xsd:122:      (URL)), the Digital Object Identifier (DOI), and the International 
./pycsw/pycsw/schemas/ogc/ows/1.0.0/owsExceptionReport.xsd:37:					<documentation>Identifier of the language used by all included exception text values. These language identifiers shall be as specified in IETF RFC 1766. When this attribute is omitted, the language used is not identified. </documentation>
./pycsw/pycsw/schemas/ogc/ows/1.0.0/owsDataIdentification.xsd:42:					<element ref="ows:Identifier" minOccurs="0">
./pycsw/pycsw/schemas/ogc/ows/1.0.0/owsDataIdentification.xsd:72:	<element name="Identifier" type="ows:CodeType">
./pycsw/pycsw/schemas/ogc/ows/1.0.0/owsDataIdentification.xsd:109:			<documentation>Identifier of a language used by the data(set) contents. This language identifier shall be as specified in IETF RFC 1766. When this element is omitted, the language used is not identified. </documentation>
./pycsw/pycsw/fes.py:275:            queries.append("%s = %s" % (queryables['pycsw:Identifier'], assign_param()))
./pycsw/pycsw/plugins/profiles/apiso/apiso.py:69:                        'apiso:Identifier': {'xpath': 'gmd:fileIdentifier/gco:CharacterString', 'dbcol': self.context.md_core_model['mappings']['pycsw:Identifier']},
./pycsw/pycsw/plugins/profiles/apiso/apiso.py:402:        idval = util.getqattr(result, self.context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/plugins/profiles/ebrim/ebrim.py:124:        identifier = util.getqattr(result, self.context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/plugins/outputschemas/dif.py:68:    etree.SubElement(node, util.nspath_eval('dif:Entry_ID', NAMESPACES)).text = util.getqattr(result, context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/plugins/outputschemas/atom.py:39:    'pycsw:Identifier': 'atom:id',
./pycsw/pycsw/plugins/outputschemas/atom.py:78:    for qval in ['pycsw:Contributor', 'pycsw:Identifier']:
./pycsw/pycsw/plugins/outputschemas/atom.py:90:    etree.SubElement(node, util.nspath_eval('atom:link', NAMESPACES), href='%s?service=CSW&version=2.0.2&request=GetRepositoryItem&id=%s' % (url, util.getqattr(result, context.md_core_model['mappings']['pycsw:Identifier'])))
./pycsw/pycsw/plugins/outputschemas/fgdc.py:39:    'pycsw:Identifier': 'idinfo/datasetid',
./pycsw/pycsw/plugins/outputschemas/fgdc.py:70:    etree.SubElement(idinfo, 'datasetid').text = util.getqattr(recobj, context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/repository.py:198:        self.context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/repository.py:301:            self.context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/repository.py:366:                self.context.md_core_model['mappings']['pycsw:Identifier']))
./pycsw/pycsw/server.py:1679:                self.context.md_core_model['mappings']['pycsw:Identifier']):
./pycsw/pycsw/server.py:1691:                    self.context.md_core_model['mappings']['pycsw:Identifier']),
./pycsw/pycsw/server.py:1705:                        self.context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/server.py:1831:                LOGGER.debug('Identifier is %s' % service_identifier)
./pycsw/pycsw/server.py:1863:            self.context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/server.py:2318:            self.context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/admin.py:379:                    context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/admin.py:421:                        context.md_core_model['mappings']['pycsw:Identifier'])
./pycsw/pycsw/admin.py:479:                     context.md_core_model['mappings']['pycsw:Identifier']))
